# This workflow may also be triggered manually for testing purposes.
name: Rust Tests Workflow

on:
  workflow_call:
    inputs:
      test_sdk:
        type: boolean
        required: false
        default: true
      test_lib_container_image_ref:
          type: boolean
          required: false
          default: false
      test_lib_oid:
          type: boolean
          required: false
          default: false

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CI: "1"

jobs:
  lint:
    name: Lints
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy

    - uses: Swatinem/rust-cache@v1

    - name: Install Just
      shell: bash
      run: |
        if ! command -v just 2>/dev/null ; then
          cargo install just --force
        fi

    - name: Spell-check the entire repo
      run: just spell-check

    - name: Lint the Rust SDK
      if: ${{ inputs.test_sdk }}
      run: |
        just lint-sdk-rust

    - name: Lint the container-image-ref lib
      if: ${{ inputs.test_lib_container_image_ref }}
      run: |
        just lint-libs-container-image-ref

    - name: Lint the oid lib
      if: ${{ inputs.test_lib_oid }}
      run: |
        just lint-libs-oid

  test-linux:
    name: Tests
    strategy:
      matrix:
        runner:
         - buildjet-4vcpu-ubuntu-2204
           # the larger SKU for ARM is due to memory constraints
         - buildjet-8vcpu-ubuntu-2204-arm
    runs-on: ${{ matrix.runner }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - uses: Swatinem/rust-cache@v1

    - name: Install Just
      shell: bash
      run: |
        if ! command -v just 2>/dev/null ; then
          cargo install just
        fi

    - name: Test the SDK
      if: ${{ inputs.test_sdk }}
      run: |
        just test-sdk-rust

    - name: Build the SDK Docs
      if: ${{ inputs.test_sdk }}
      run: |
        just _doc-rust-crate

    - name: Test the library container-image-ref
      if: ${{ inputs.test_lib_container_image_ref }}
      run: |
        just test-libs-container-image-ref

    - name: Build library container-image-ref Docs
      if: ${{ inputs.test_lib_container_image_ref }}
      run: |
        just _doc-rust-crate 'crates/container-image-ref/Cargo.toml'

    - name: Test the library OID
      if: ${{ inputs.test_lib_oid }}
      run: |
        just test-libs-oid

    - name: Build library OID Docs
      if: ${{ inputs.test_lib_oid }}
      run: |
        just _doc-rust-crate 'crates/oid/Cargo.toml'

  test-win-macos-x64:
    name: Tests
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - uses: Swatinem/rust-cache@v1

    - name: Install Just
      if: ${{ matrix.os == 'windows-latest' }}
      run: choco install -y just

    - name: Install Just
      shell: bash
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        if ! command -v just 2>/dev/null ; then
          brew install just
        fi

    - name: Test the SDK
      if: ${{ inputs.test_sdk }}
      run: |
        just test-sdk-rust

    - name: Test the library container-image-ref
      if: ${{ inputs.test_lib_container_image_ref }}
      run: |
        just test-libs-container-image-ref

    - name: Test the library OID
      if: ${{ inputs.test_lib_oid }}
      run: |
        just test-libs-oid
